{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates the stack for project MedicalAssistance. Generated by Sigma",
  "Parameters": {
    "lambdaCodeBucketParameter": {
      "Type": "String",
      "Description": "Name of the S3 bucket containing the Lambda deployment package"
    },
    "lambdaCodeKeyParameter": {
      "Type": "String",
      "Description": "S3 key of the Lambda deployment package"
    }
  },
  "Outputs": {
    "httpApiguploadApiRoutePUTupload": {
      "Description": "URL of uploadApi/upload:PUT endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "httpApiguploadApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com",
            "/audio",
            "/upload"
          ]
        ]
      }
    },
    "MedicalAssistance": {
      "Description": "ARN of Lambda function MedicalAssistance",
      "Value": {
        "Fn::GetAtt": [
          "MedicalAssistance",
          "Arn"
        ]
      }
    }
  },
  "Resources": {
    "httpApiguploadApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Description": "An HTTP API generated by Sigma",
        "Name": "uploadApi",
        "ProtocolType": "HTTP"
      }
    },
    "httpApiguploadApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "httpApiguploadApi"
        },
        "Description": "Stage of API",
        "StageName": "audio",
        "AutoDeploy": true
      }
    },
    "MedicalAssistance": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "MedicalAssistance",
        "Description": "Invokes functions defined in MedicalAssistance.py in project MedicalAssistance. Generated by Sigma.",
        "Code": {
          "S3Bucket": {
            "Ref": "lambdaCodeBucketParameter"
          },
          "S3Key": {
            "Ref": "lambdaCodeKeyParameter"
          }
        },
        "MemorySize": 128,
        "Handler": "MedicalAssistance.handler",
        "Timeout": 60,
        "Runtime": "python3.8",
        "Layers": [],
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Role": {
          "Fn::GetAtt": [
            "MedicalAssistanceExecutionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SIGMA_AWS_ACC_ID": {
              "Ref": "AWS::AccountId"
            }
          }
        }
      }
    },
    "MedicalAssistanceExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "MedicalAssistancePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject"
                  ],
                  "Resource": "arn:aws:s3:::medicalaudiofiles/*"
                },
                {
                  "Effect": "Allow",
                  "Action": "s3:GetObject",
                  "Resource": "arn:aws:s3:::medicalreport/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "SES:SendEmail",
                    "SES:SendRawEmail"
                  ],
                  "Resource": [
                    "arn:aws:ses:us-east-2:129803728197:identity/c.netra@gmail.com"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "httpApiguploadApiIntegrationMedicalAssistance": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "httpApiguploadApi"
        },
        "Description": "Integration of function: MedicalAssistance to HTTP API: uploadApi",
        "IntegrationType": "AWS_PROXY",
        "PayloadFormatVersion": "2.0",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "MedicalAssistance",
            "Arn"
          ]
        }
      }
    },
    "httpApiguploadApiRoutePUTupload": {
      "Type": "AWS::ApiGatewayV2::Route",
      "DependsOn": [
        "httpApiguploadApiIntegrationMedicalAssistance"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "httpApiguploadApi"
        },
        "RouteKey": "PUT /upload",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "httpApiguploadApiIntegrationMedicalAssistance"
              }
            ]
          ]
        }
      }
    },
    "httpApiguploadApiRoutePUTuploadPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MedicalAssistance"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/*/${__Method__}${__Path__}",
            {
              "__Method__": "PUT",
              "__Path__": "/upload",
              "__ApiId__": {
                "Ref": "httpApiguploadApi"
              }
            }
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      }
    }
  }
}